import{_ as s,o as t,c as a,R as i}from"./chunks/framework.6wzHQunH.js";const u=JSON.parse('{"title":"From Designer 表单构建器","description":"","frontmatter":{},"headers":[],"relativePath":"components/designer.md","filePath":"components/designer.md","lastUpdated":1703066649000}'),e={name:"components/designer.md"},n=i(`<h1 id="from-designer-表单构建器" tabindex="-1">From Designer 表单构建器 <a class="header-anchor" href="#from-designer-表单构建器" aria-label="Permalink to &quot;From Designer 表单构建器&quot;">​</a></h1><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ex-form-designer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :form-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;formData&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :form-json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;formJson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref, reactive } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> formData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//表单数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> formJson</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  formConfig: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//表单设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  widgetList: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//组件列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h2><blockquote><p>该组件主题基于<a href="https://element-plus.org/zh-CN/guide/theming.html" target="_blank" rel="noreferrer">Element Plus</a>搭建,可以根据改变Element全局 --el-color-primary实现， 当项目有实现Element Plus主题业务时，就无需使用该themeColor属性。</p></blockquote><h4 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ex-form-designer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :theme-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="黑夜模式" tabindex="-1">黑夜模式 <a class="header-anchor" href="#黑夜模式" aria-label="Permalink to &quot;黑夜模式&quot;">​</a></h2><blockquote><p>由于部分Element Plus组件使用Teleport被插入到body下，导致无法修改样式，当组件teleport属性设置false会导致页面组件显示不全， 所以推荐使用<a href="https://element-plus.org/zh-CN/guide/dark-mode.html" target="_blank" rel="noreferrer">Element Plus</a>黑夜模式设置。 因<a href="https://www.npmjs.com/package/vue-codemirror" target="_blank" rel="noreferrer">vue-codemirror</a>编辑器插件黑夜模式与Element Plus无关，还需开启组件黑夜模式。</p></blockquote><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ex-form-designer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="属性参数" tabindex="-1">属性参数 <a class="header-anchor" href="#属性参数" aria-label="Permalink to &quot;属性参数&quot;">​</a></h2><table><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr><tr><td>form-data</td><td>表单数据</td><td>object</td><td>{}</td></tr><tr><td>form-json</td><td>构建器对象</td><td>object</td><td>{widgetList:[], formConfig:{配置如下}}</td></tr><tr><td>options-data</td><td>构造器配置</td><td>object</td><td>配置如下</td></tr><tr><td>banned-widgets</td><td>禁用组件</td><td>Array/cname</td><td>[] 例:[&quot;input&quot;]</td></tr><tr><td>theme-color</td><td>主题颜色</td><td>string</td><td>#409eff</td></tr><tr><td>dark</td><td>黑夜模式</td><td>boolean</td><td>false</td></tr></table><table><tr><th>属性名</th><th>属性配置</th></tr><tr><td>formConfig</td><td>{<br><span>  size: &quot;default&quot;</span><br><span>  labelPosition: &quot;left&quot;</span><br><span>  align: &quot;left&quot;</span><br><span>  labelWidth: 100</span><br><span>  modelName: &quot;formData&quot;</span><br><span>  formName: &quot;formRef&quot;</span><br><span>  patternType: &quot;pc&quot;</span><br><span>  isPageType: &quot;page&quot;</span><br><span>  hideRequiredAsterisk: false</span><br><span>  cssCode: &quot;&quot;</span><br><span>  customClass: []</span><br><span>  functions: &quot;&quot;</span><br><span>  onFormCreated: &quot;&quot;</span><br><span>  onFormMounted: &quot;&quot;</span><br><span>  onFormDataChange: &quot;&quot;</span><br> } </td></tr><tr><td>options-data</td><td>{<br><span>  templateButton: false, //模版栏</span><br><span>  treeFormButton: true, //表单树形按钮</span><br><span>  previewFormButton: true, //预览表单按钮</span><br><span>  exportJsonButton: true, //JSON按钮</span><br><span>  exportCodeButton: true, //代码按钮</span><br><span>  generateSFCButton: true, //生成SFC按钮</span><br><span>  pageTypeButton: true, //页面类型按钮</span><br><span>  copyDataButton: true, //复制按钮</span><br><span>  saveFileButton: true, //文件按钮</span><br><span>  resetFormJson: false //重置表单为空</span><br> } </td></tr></table>`,13),r=[n];function l(p,h,o,d,k,E){return t(),a("div",null,r)}const c=s(e,[["render",l]]);export{u as __pageData,c as default};
