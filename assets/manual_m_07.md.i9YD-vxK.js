import{_ as t,c as e,o as a,R as s}from"./chunks/framework.BhNW9Jg7.js";const d="/exercise-form-docs.github.io/assets/step1.CLQTuwdZ.png",o="/exercise-form-docs.github.io/assets/step2.BKuK8hOy.png",i="/exercise-form-docs.github.io/assets/step3.BFsSctQj.png",r="/exercise-form-docs.github.io/assets/step4.CKicPVGE.png",n="/exercise-form-docs.github.io/assets/step5.B1naiCEt.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"manual/m_07.md","filePath":"manual/m_07.md","lastUpdated":1719395294000}'),c={name:"manual/m_07.md"},l=s('<h2 id="树形和对象容器" tabindex="-1">树形和对象容器 <a class="header-anchor" href="#树形和对象容器" aria-label="Permalink to &quot;树形和对象容器&quot;">​</a></h2><h3 id="树形" tabindex="-1">树形 <a class="header-anchor" href="#树形" aria-label="Permalink to &quot;树形&quot;">​</a></h3><p>是基于el-tree实现，扩展输入过滤框，全选、父子关联、展开/折叠。</p><img src="'+d+'" data-fancybox="gallery"><p>树形数据编辑</p><img src="'+o+'" data-fancybox="gallery"><p>树形数据源使用</p><img src="'+i+`" data-fancybox="gallery"><h4 id="交互事件" tabindex="-1">交互事件 <a class="header-anchor" href="#交互事件" aria-label="Permalink to &quot;交互事件&quot;">​</a></h4><table><thead><tr><th>方法</th><th>描述</th><th style="text-align:center;">参数</th></tr></thead><tbody><tr><td><code>getTreeData</code></td><td>获取树形数据</td><td style="text-align:center;">----</td></tr><tr><td><code>setTreeData</code></td><td>设置树形数据</td><td style="text-align:center;"><code>data:any[]</code></td></tr><tr><td><code>refreshData</code></td><td>刷新树形</td><td style="text-align:center;">----</td></tr><tr><td><code>handleExpandOrRetract</code></td><td>展开/折叠</td><td style="text-align:center;"><code>value: boolean</code></td></tr><tr><td><code>handleSelectAll</code></td><td>全选</td><td style="text-align:center;"><code>value: boolean</code></td></tr></tbody></table><h3 id="对象容器" tabindex="-1">对象容器 <a class="header-anchor" href="#对象容器" aria-label="Permalink to &quot;对象容器&quot;">​</a></h3><p>使用场景：当表单需要外层父对象包裹时使用</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">对象容器名 {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  表单组件属性名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>效果显示</p><img src="`+r+'" data-fancybox="gallery"><p>获取的表单数据如下</p><img src="'+n+'" data-fancybox="gallery">',17),p=[l];function h(_,g,m,u,b,y){return a(),e("div",null,p)}const k=t(c,[["render",h]]);export{f as __pageData,k as default};
