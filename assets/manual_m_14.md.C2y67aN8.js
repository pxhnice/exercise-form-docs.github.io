import{_ as s,c as a,o as i,R as t}from"./chunks/framework.BhNW9Jg7.js";const e="/exercise-form-docs.github.io/assets/step1.BbVKFTwf.png",n="/exercise-form-docs.github.io/assets/step2.DbtPCAsN.png",l="/exercise-form-docs.github.io/assets/step3.CGmFUpyD.png",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"manual/m_14.md","filePath":"manual/m_14.md","lastUpdated":1719474209000}'),h={name:"manual/m_14.md"},p=t('<h2 id="表单校验使用" tabindex="-1">表单校验使用 <a class="header-anchor" href="#表单校验使用" aria-label="Permalink to &quot;表单校验使用&quot;">​</a></h2><p>表单的数据校验支持三种校验方式，必填项校验、正则校验、自定义校验</p><h3 id="必填校验" tabindex="-1">必填校验 <a class="header-anchor" href="#必填校验" aria-label="Permalink to &quot;必填校验&quot;">​</a></h3><p>通过设置表单必填属性为true</p><img src="'+e+'" data-fancybox="gallery"><h3 id="正则校验" tabindex="-1">正则校验 <a class="header-anchor" href="#正则校验" aria-label="Permalink to &quot;正则校验&quot;">​</a></h3><p>选择已配置正则校验（正则配置路径：constants/validation.ts）,其中必填校验提示，规则中已有默认提示，可自行进行覆盖</p><img src="'+n+'" data-fancybox="gallery"><h3 id="自定义校验" tabindex="-1">自定义校验 <a class="header-anchor" href="#自定义校验" aria-label="Permalink to &quot;自定义校验&quot;">​</a></h3><p>在事件属性列表中选中“onValidate”事件属性，编写校验代码</p><img src="'+l+`" data-fancybox="gallery"><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 示例代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请填写用户名&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12),r=[p];function o(k,c,d,E,g,_){return i(),a("div",null,r)}const y=s(h,[["render",o]]);export{u as __pageData,y as default};
